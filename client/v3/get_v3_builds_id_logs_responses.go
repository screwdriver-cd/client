package v3

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// GetV3BuildsIDLogsReader is a Reader for the GetV3BuildsIDLogs structure.
type GetV3BuildsIDLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetV3BuildsIDLogsReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	default:
		result := NewGetV3BuildsIDLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetV3BuildsIDLogsDefault creates a GetV3BuildsIDLogsDefault with default headers values
func NewGetV3BuildsIDLogsDefault(code int) *GetV3BuildsIDLogsDefault {
	return &GetV3BuildsIDLogsDefault{
		_statusCode: code,
	}
}

/*GetV3BuildsIDLogsDefault handles this case with default header values.

Successful
*/
type GetV3BuildsIDLogsDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the get v3 builds id logs default response
func (o *GetV3BuildsIDLogsDefault) Code() int {
	return o._statusCode
}

func (o *GetV3BuildsIDLogsDefault) Error() string {
	return fmt.Sprintf("[GET /v3/builds/{id}/logs][%d] getV3BuildsIdLogs default  %+v", o._statusCode, o.Payload)
}

func (o *GetV3BuildsIDLogsDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
