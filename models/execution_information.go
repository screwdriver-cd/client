package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-swagger/go-swagger/swag"
	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*ExecutionInformation execution information

swagger:model Execution information
*/
type ExecutionInformation struct {

	/* jobs
	 */
	Jobs *ListOfAvailableJobConfigurations `json:"jobs,omitempty"`

	/* workflow
	 */
	Workflow []string `json:"workflow,omitempty"`
}

// Validate validates this execution information
func (m *ExecutionInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWorkflow(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExecutionInformation) validateWorkflow(formats strfmt.Registry) error {

	if swag.IsZero(m.Workflow) { // not required
		return nil
	}

	for i := 0; i < len(m.Workflow); i++ {

		if err := validate.RequiredString("workflow"+"."+strconv.Itoa(i), "body", string(m.Workflow[i])); err != nil {
			return err
		}

	}

	return nil
}
